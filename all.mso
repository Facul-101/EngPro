using "types";

Model Custom_Corrente

	PARAMETERS
	A as Integer;
	B as Integer;
	C as Integer;
	D as Integer;
	
	Cp(4)	as positive (Unit='kcal/(kg*K)');	# Capacidades calorificas
	lat(4)	as positive (Unit='kcal/kg');		# Calores latentes
	rho(4)	as positive (Unit='kg/l');			# Densidades
	
	SET
	A = 1;
	B = 2;
	C = 3;
	D = 4;
	
	Cp = [0.5, 0.6, 0.7, 1.0]*'kcal/(kg*K)';
	lat = [0, 0, 150, 450]*'kcal/kg';
	rho = [0.6, 0.7, 0.8, 1]*'kg/l';
	
	VARIABLES
	W 		as positive (Unit='kg/h');	# Vazao massica total
	T 		as positive (Unit='K');		# Temperatura
	x(4)	as fraction;				# Fracao massica por componente
	f(4)	as positive (Unit='kg/h');	# Vazao massica por componente
	sum_cop	as positive;				# Soma das comp
	
	
	EQUATIONS
	f = x*W;
	sum_cop = sum(x);

end

Model Custom_Fonte

	VARIABLES
	out	outlet as Custom_Corrente; # Saida da fonte

end

Model Custom_Reator

    VARIABLES
    in  feed as Custom_Corrente; # Corrente inicial     - Corrente 1
    out reag as Custom_Corrente; # Resultado do reacao  - Corrente 2

    conv    as fraction; 				# Conversao da reacao
    t       as positive (Unit='h'); 	# empo de reacao
    V       as positive (Unit='l'); 	# Volume do reator

    EQUATIONS

    # Conversao da reacao
    conv = 0.92*(1 - exp((-20)*t*'1/h'));

    # Balanco de massa por componente
    reag.f(reag.A) = feed.f(reag.A) - feed.f(feed.A)*conv;
    reag.f(reag.B) = feed.f(reag.B) + feed.f(feed.A)*conv;
    reag.f(reag.C) = feed.f(reag.C);
    reag.f(reag.D) = feed.f(reag.D);

    # Composicao
    sum(reag.x) = 1;
    
    # Balanco termico
    reag.T = feed.T;

    # Volume
    V = sum(feed.f/feed.rho)*t;

end

FlowSheet teste_reator

    DEVICES
    feed_eq as Custom_Fonte;
    main_eq as Custom_Reator;

    CONNECTIONS
    feed_eq.outlet to main_eq.feed;
    
	SPECIFY
	feed_eq.outlet.T = 300*'K';
	feed_eq.outlet.W = 1539*'kg/h';
	feed_eq.outlet.x = [1, 0, 0, 0];
	
	main_eq.conv = 0.9;
	
	OPTIONS
	Dynamic = false;

end

Model Custom_Extrator   

    VARIABLES
    in  feed    as Custom_Corrente; # Vem do reator     - Corrente 2
    out extr    as Custom_Corrente; # Saida solvente    - Corrente 3

    in  solv    as Custom_Corrente; # Vem do misturador - Corrente 8
    out rafi    as Custom_Corrente; # Libera produto    - Corrente 9
    
    T           as positive (Unit='K');		# Temperatura do equipamento
	t           as positive (Unit='h'); 	# Tempo de residencia
	k_t         as positive; 				# Constante de equilibrio L-L termica
	k_r         as positive; 				# Constante de equilibrio L-L real
	r           as positive; 				# Fracao recuperada
	V           as positive (Unit='l');		# Volume do equipamento

    EQUATIONS

    # Balanco de massa por componente
    extr.f(extr.A) = feed.f(feed.A)*r;
    extr.f(extr.B) = 0*'kg/h';
    extr.f(extr.C) = solv.f(solv.C);
    extr.f(extr.D) = 0*'kg/h';
    rafi.f(rafi.A) = feed.f(feed.A)*(1 - r);
    rafi.f(rafi.B) = feed.f(feed.B);
    rafi.f(rafi.C) = 0*'kg/h';
    rafi.f(rafi.D) = 0*'kg/h';

    # Composicao
    sum(extr.x) = 1;
    sum(rafi.x) = 1;

    # Equilibrio L-L
    k_t = 3 + 0.04*(T*'1/K' - 273);
    k_r = k_t*(1 - exp(-10*t*'1/h'));
    extr.x(extr.A) = k_r*rafi.x(rafi.A); # TEST

    #Balanco de energia
    sum(feed.f*feed.Cp)*feed.T + sum(solv.f*solv.Cp)*solv.T = sum(extr.f*extr.Cp)*extr.T + sum(rafi.f*rafi.Cp)*rafi.T;

    # Volume
    V = sum(feed.f/feed.rho + solv.f/solv.rho)*t;

    # Equilibrio termico
    extr.T = T;
    rafi.T = T;

end

FlowSheet teste_extrator
    DEVICES
	feed_eq as Custom_Fonte;
	solv_eq	as Custom_Fonte;
	main_eq	as Custom_Extrator;

	CONNECTIONS
	feed_eq.outlet	to main_eq.feed;
	solv_eq.outlet	to main_eq.solv;

	SPECIFY
	
	feed_eq.outlet.T = 300*'K';
	feed_eq.outlet.W = 500*'kg/h';
	feed_eq.outlet.x = [0.1, 0.9, 0, 0];

	solv_eq.outlet.T = 400*'K';
	solv_eq.outlet.x = [0, 0, 1, 0];

	main_eq.t = 0.75*'h';
	main_eq.rafi.x(2) = 0.95;

	OPTIONS
	Dynamic = false;
end

Model Custom_Evaporador

	PARAMETERS
	U as positive (Unit='kcal/(h*m^2*K)'); # Coef global de troca termica
	
	SET
	U = 80*'kcal/(h*m^2*K)';
	
	VARIABLES
	in  feed	as Custom_Corrente; # Vem do extrator		- Corrente 3
	out conc	as Custom_Corrente; # Vai ser descartada	- Corrente 4 (rica em A)
	out evap	as Custom_Corrente; # Vai ao Condensador	- Corrente 5 (pura em C)

	in  vapo	as Custom_Corrente; # Entrada de D			- Corrente 10
	out cond	as Custom_Corrente; # Saida de D			- Corrente 11

	Q 			as positive (Unit='kcal/h');	# Calor fornecido ao evaporador
	T			as positive (Unit='K');			# Temperatura interna do evaporador
	A			as positive (Unit='m^2');		# Area para troca de calor

	r			as fraction; # Razao de evaparacao
	
	EQUATIONS

	# Balanco de massa por componente
	conc.f(conc.A) = feed.f(feed.A);
	evap.f(evap.A) = 0*'kg/h';
	conc.f(conc.B) = 0*'kg/h';
	evap.f(evap.B) = 0*'kg/h';
	conc.f(conc.C) = feed.f(feed.C)*(1 - r);
	evap.f(evap.C) = feed.f(feed.C)*r;
	conc.f(conc.D) = 0*'kg/h';
	evap.f(evap.D) = 0*'kg/h';
	vapo.f = cond.f;
	
	# Composicao
	sum(conc.x) = 1;
	sum(evap.x) = 1;
	sum(cond.x) = 1;

	# Balanco de energia
	Q = vapo.W*vapo.lat(vapo.D);
	Q = sum(feed.f*feed.Cp)*(T - feed.T) + evap.W*evap.lat(evap.C);
	Q = U*A*(vapo.T - T);

	# Equilibrio terminco
	conc.T = T;
	evap.T = T;
	vapo.T = cond.T;

end

FlowSheet teste_evaporador

	DEVICES
	feed_eq	as Custom_Fonte;
	vapo_eq	as Custom_Fonte;
	main_eq	as Custom_Evaporador;

	CONNECTIONS
	feed_eq.outlet	to main_eq.feed;
	vapo_eq.outlet	to main_eq.vapo;

	SPECIFY
	
	feed_eq.outlet.T = 320*'K';
	feed_eq.outlet.W = 500*'kg/h';
	feed_eq.outlet.x = [0.5, 0, 0.5, 0];

	vapo_eq.outlet.T = 420*'K';
	vapo_eq.outlet.x = [0, 0, 0, 1];

	main_eq.r = 0.9;
	main_eq.T = 350*'K';

	OPTIONS
	Dynamic = false;

end

Model Custom_Condensador
	
	PARAMETERS
	U as positive (Unit='kcal/(h*m^2*K)'); # kcal/(h*m^2*K)	- Coef global de troca de calor
	
	SET
	U = 120*'kcal/(h*m^2*K)';
	
	VARIABLES
	in  i_quente	as Custom_Corrente; # Vem do evaporador 	- Corrente 5
	out o_quente	as Custom_Corrente; # Vai para o mist.		- Corrente 6
	
	in  i_fria		as Custom_Corrente; # Entrada resfriacao	- Corrente 12
	out o_fria		as Custom_Corrente; # Saida resfriacao		- Corrente 13
	
	A		as positive (Unit='m^2');
	Q		as positive (Unit='kcal/h');
	DT1		as positive (Unit='K');
	DT2		as positive (Unit='K');
	DTML	as positive (Unit='K');
	
	EQUATIONS
	
	# Balanco de massa por componente
	i_quente.f = o_quente.f;
	i_fria.f = o_fria.f;
	
	# Composicao
	sum(o_quente.x) = 1;
	sum(o_fria.x) = 1;
	
	# Balanco de energia
	Q = sum(i_fria.f*i_fria.Cp)*(o_fria.T - i_fria.T);
	Q = i_quente.W*i_quente.lat(i_quente.C);
	
	# Balanco termodinamico
	o_quente.T = i_quente.T;
	
	# Modelo do condensador
	DT1  = i_quente.T - o_fria.T;
	DT2  = o_quente.T - i_fria.T;
	DTML = (DT1 - DT2)/ln(DT1/DT2);
	Q    = U*A*DTML;

end

FlowSheet teste_condensador
	
	DEVICES
	i_quente_eq	as Custom_Fonte;
	i_fria_eq	as Custom_Fonte;
	main_eq		as Custom_Condensador;
	
	CONNECTIONS
	i_quente_eq.outlet	to main_eq.i_quente;
	i_fria_eq.outlet	to main_eq.i_fria;
	
	SPECIFY
	i_quente_eq.outlet.T = 350*'K';
	i_quente_eq.outlet.W = 300*'kg/h';
	i_quente_eq.outlet.x = [0, 0, 1, 0];
	
	i_fria_eq.outlet.T = 285*'K';
	i_fria_eq.outlet.x = [0, 0, 0, 1];
	
	main_eq.o_fria.T = 300*'K';

	OPTIONS
	Dynamic = false;

end

Model Custom_Misturador
	
	VARIABLES
	in	inp_1	as Custom_Corrente; # Vem do condensador - Corrente 6
	in	inp_2	as Custom_Corrente; # Carrega com C puro - Corrente 7
	out	output	as Custom_Corrente; # Corrente misturada - Corrente 8
	
	EQUATIONS
	
	# Balanco de massa por componente
	inp_1.f + inp_2.f = output.f;
	
	# Composicao
	sum(output.x) = 1;
	
	# Balanco de energia
	sum(inp_1.f*inp_1.Cp)*inp_1.T + sum(inp_2.f*inp_2.Cp)*inp_2.T = sum(output.f*output.Cp)*output.T;
	
end

FlowSheet teste_misturador

	DEVICES
	inp_1_eq	as Custom_Fonte;
	inp_2_eq	as Custom_Fonte;
	main_eq		as Custom_Misturador;
	
	CONNECTIONS
	inp_1_eq.outlet to main_eq.inp_1;
	inp_2_eq.outlet to main_eq.inp_2;
	
	SPECIFY
	
	inp_1_eq.outlet.T = 400*'K';
	inp_1_eq.outlet.W = 1000*'kg/h';
	inp_1_eq.outlet.x = [0, 0, 1, 0];
	
	inp_2_eq.outlet.T = 300*'K';
	inp_2_eq.outlet.W = 100*'kg/h';
	inp_2_eq.outlet.x = [0, 0, 1, 0];

	OPTIONS
	Dynamic = false;

end

FlowSheet Dimensionamento

	DEVICES
	
	fonte_1		as Custom_Fonte;
	fonte_7		as Custom_Fonte;
	fonte_10	as Custom_Fonte;
	fonte_12	as Custom_Fonte;
	
	_reator			as Custom_Reator;
	_extrator		as Custom_Extrator;
	_evaporador		as Custom_Evaporador;
	_condensador	as Custom_Condensador;
	_misturador		as Custom_Misturador;
	
	CONNECTIONS
	
	fonte_1.outlet			to _reator.feed; 			# 1
	_reator.reag			to _extrator.feed; 			# 2
	_extrator.extr			to _evaporador.feed;		# 3
														# 4 - global output
	_evaporador.evap		to _condensador.i_quente;	# 5
	_condensador.o_quente	to _misturador.inp_1;		# 6
	fonte_7.outlet			to _misturador.inp_2;		# 7
	_misturador.output		to _extrator.solv;			# 8
														# 9 - global output
	fonte_10.outlet			to _evaporador.vapo;		# 10
														# 11 - global output
	fonte_12.outlet			to _condensador.i_fria;		# 12
														# 13 - global output
	
	SPECIFY
	
	# Variaveis conhecidas
	fonte_1.outlet.W = 1539*'kg/h';
	fonte_1.outlet.T = 300*'K';
	fonte_1.outlet.x = [1, 0, 0, 0];		# Comp A puro
	
	fonte_7.outlet.T = 300*'K';
	fonte_7.outlet.x = [0, 0, 1, 0];		# Comp C puro	
	
	fonte_10.outlet.T = 420*'K';
	fonte_10.outlet.x = [0, 0, 0, 1];		# Comp D puro
	
	fonte_12.outlet.T = 285*'K';
	fonte_12.outlet.x = [0, 0, 0, 1]; 		# Comp D puro
	
	# Metas de projeto
	_reator.conv = 0.9;
	_extrator.rafi.x(2) = 0.95;				# Comp B com um pouco de A
	_extrator.t = 0.75*'h';
	_evaporador.T = 350*'K';
	_evaporador.r = 0.9;
	_condensador.o_fria.T = 300*'K';
	
	

	VARIABLES
	R as positive (Brief= "Receita", Unit='US$/h');
	Cmp as positive (Brief= "Custo materia prima", Unit='US$/h');
	Cutil as positive (Brief= "Custo util da planta", Unit='US$/h');
	ISBL as positive (Unit='US$/h');
	LE as Real (Brief= "Lucro estimado", Unit='US$/h');
	
	EQUATIONS
	
	R = (0.09*(_extrator.rafi.f(2)*'h/kg'))*'US$/h';
	Cmp = ((0.03*fonte_1.outlet.W + 0.0115*fonte_7.outlet.W)*'h/kg')*'US$/h';
	Cutil = ((0.0015*fonte_10.outlet.W + 0.00005*fonte_12.outlet.W)*'h/kg')*'US$/h';
	ISBL = 0.0006*((272.51*(((_reator.V+_extrator.V)*'1/m^3')^0.6))+(8352.73*((_condensador.A+_evaporador.A)*'1/m^2')^0.5))*'US$/h';
	LE = (0.48*(R*'h/US$')-0.68*((Cmp+Cutil)*'h/US$')-0.54*(ISBL*'h/US$'))*'US$/h'; 
	
	OPTIONS
	Dynamic = false;
	
end